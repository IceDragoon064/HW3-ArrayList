
/**
 * @author Leon Lu
 * @version 1.1 5/8/2022
 * @param <T>
 * This program is used to simulate ArrayList
 */
public class ArrayList<T> implements List<T> {

	private static final int DEFAULT_INITIAL_CAPACITY = 11;
	
	private T[] data; //Stores the item added to the list
	private int size;  //Tracks how many items have been added to the list
	
	/**
	 * Constructs an ArrayList using the default capacity
	 */
	public ArrayList() {
		// TODO Complete Constructor
		this.data = (T[]) new Object[0];
	}

	/**
	 * Constructs an ArrayList with an 'initialCapacity'
	 * 
	 * If 'initalCapacity' is non-positive use the default capacity
	 * 
	 * @param initialCapacity - the integer for the array list
	 */
	public ArrayList(int initialCapacity) {
		// TODO Complete Constructor
		this.data = (T[]) new Object[initialCapacity];

	}

	@Override
	public void add(T item, int index) {
		// TODO Auto-generated method stub

	}

	@Override
	public void clear() {
		// TODO Auto-generated method stub

	}

	@Override
	public boolean contains(Object item) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public T get(int index) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int indexOf(Object item) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}
}

